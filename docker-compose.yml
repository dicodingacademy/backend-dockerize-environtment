version: "3.9"

services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: appsecret
      POSTGRES_DB: new_album_apps
    # Ephemeral: data di RAM â†’ bersih tiap stop
    tmpfs:
      - /var/lib/postgresql/data:uid=999,gid=999,mode=700
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d new_album_apps"]
      interval: 2s
      timeout: 2s
      retries: 30

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    environment:
      # Pakai user non-guest (guest dibatasi ke localhost oleh RabbitMQ)
      RABBITMQ_DEFAULT_USER: appuser
      RABBITMQ_DEFAULT_PASS: appsecret
    ports:
      - "5672:5672"    # AMQP
      - "15672:15672"  # Management UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 20

  smtp:
    image: axllent/mailpit:latest
    # SMTP dev server: tanpa kredensial (auth opsional), cocok untuk pengujian
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8025/healthz"]
      interval: 5s
      timeout: 3s
      retries: 20

  migrate:
    build: .
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://appuser:appsecret@db:5432/new_album_apps"
    command: npm run migrate up
    restart: "no"

  api:
    build: .
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
      smtp:
        condition: service_started
    environment:
      RUNNING_IN_DOCKER: "1"
      NODE_ENV: "development"
      APP_NAME: "Backend-Fundamental-APP"
      PORT: "5000"
      HOST: "0.0.0.0"
      DATABASE_URL: "postgres://appuser:appsecret@db:5432/new_album_apps"
      RABBITMQ_SERVER: "amqp://appuser:appsecret@rabbitmq:5672"
      PGHOST: "db"
      PGPORT: "5432"
      PGUSER: "appuser"
      PGPASSWORD: "appsecret"
      PGDATABASE: "new_album_apps"
      SMTP_HOST: "smtp"
      SMTP_PORT: "1025"
      # Jika memaksa auth di nodemailer, bisa set SMTP_USER/PASS opsional:
      # SMTP_USER: ""
      # SMTP_PASS: ""

      # (opsional) JWT key tetap bisa ditanam di sini bila dipakai app:
      ACCESS_TOKEN_KEY: "74684be1d34269a2d584418338bb02afd3f1c851c77582bc8dbb638697cf87ed29cb7675440c3846a51d752c45e578dd068d48529ca1b125efd00e7102a0b6c2"
      REFRESH_TOKEN_KEY: "6f72a50eb1cb2aee202acd80d4904b2c1e5f4790ff4576757e072e2b9053d02b9356e295e9ab80fbda4261554682aadd4cf648ae0e1604279704a5227792516d"
      ACCESS_TOKEN_AGE: "1800"

    ports:
      - "5000:5000"
    restart: "no"
